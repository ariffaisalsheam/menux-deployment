name: Deploy Backend (Menu.X)

on:
  push:
    branches: ["main"]
    paths:
      - "backend/**"
      - ".github/workflows/deploy-backend.yml"
  workflow_dispatch: {}

concurrency:
  group: deploy-backend
  cancel-in-progress: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      VM_HOST: ${{ secrets.VM_HOST }}
      VM_USER: ${{ secrets.VM_USER }}
      VM_APP_DIR: ${{ secrets.VM_APP_DIR }}
      VM_SSH_PORT: ${{ secrets.VM_SSH_PORT }}
      SERVICE_NAME: ${{ secrets.SERVICE_NAME }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Prepare Maven wrapper (permissions + line endings)
        run: |
          cd backend
          chmod +x mvnw
          sed -i 's/\r$//' mvnw

      - name: Build backend (skip tests)
        run: |
          cd backend
          ./mvnw -B -ntp -DskipTests package

      - name: Prepare SSH key
        run: |
          test -n "${{ secrets.VM_SSH_KEY }}" || { echo "Missing secret VM_SSH_KEY"; exit 1; }
          echo "${{ secrets.VM_SSH_KEY }}" > key
          chmod 600 key
          mkdir -p ~/.ssh
          ssh-keyscan -H "$VM_HOST" >> ~/.ssh/known_hosts

      - name: Upload JAR via scp
        run: |
          JAR_LOCAL="backend/target/menu-x-backend-0.0.1-SNAPSHOT.jar"
          : "${VM_SSH_PORT:=22}"
          test -f "$JAR_LOCAL" || { echo "Jar not found at $JAR_LOCAL"; exit 1; }
          ssh -i key -p "$VM_SSH_PORT" "$VM_USER@$VM_HOST" "mkdir -p '$VM_APP_DIR/target'"
          scp -i key -P "$VM_SSH_PORT" "$JAR_LOCAL" "$VM_USER@$VM_HOST:$VM_APP_DIR/target/menu-x-backend-0.0.1-SNAPSHOT.jar"

      - name: Restart service
        run: |
          : "${VM_SSH_PORT:=22}"
          : "${SERVICE_NAME:=menux-backend}"
          ssh -i key -p "$VM_SSH_PORT" "$VM_USER@$VM_HOST" "sudo systemctl restart '$SERVICE_NAME' && sudo systemctl status '$SERVICE_NAME' --no-pager || true"
          ssh -i key -p "$VM_SSH_PORT" "$VM_USER@$VM_HOST" "sudo journalctl -u '$SERVICE_NAME' -n 80 --no-pager || true"

      - name: Health check API (on VM)
        run: |
          : "${VM_SSH_PORT:=22}"
          ssh -i key -p "$VM_SSH_PORT" "$VM_USER@$VM_HOST" '
            set -e
            ENV_FILE=/home/fayaz.ewu/menux/backend/.env
            if [ -f "$ENV_FILE" ]; then
              PORT_VAL=$(grep -E "^PORT=" "$ENV_FILE" | tail -n1 | cut -d= -f2 | tr -d "\r[:space:]")
            fi
            if ! echo "$PORT_VAL" | grep -Eq "^[0-9]{2,5}$"; then PORT_VAL=8080; fi
            echo "Using PORT=$PORT_VAL for health check"
            echo "Warmup: waiting 300s (5 minutes) before starting health checks..."
            sleep 300
            for i in $(seq 1 40); do
              if curl -fsS "http://127.0.0.1:${PORT_VAL}/api/public/settings" >/dev/null; then
                echo "Health check passed"; exit 0; fi
              echo "Waiting for app (attempt $i/40)"; sleep 3;
            done
            echo "Health check failed"; exit 1'
